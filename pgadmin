def get_server_image_id(self, server_name, retry=3):
    access_token = self.get_iam_token(["ccs:read:all"])
    try:
        params = {"status": "ACTIVE", "name": server_name}
        logger.debug(f"Request URL: {OCS_SERVERS_ENDPOINT}, Params: {params}")
        
        res = http_client.get(
            OCS_SERVERS_ENDPOINT,
            params=params,
            headers={
                "accept": "application/json",
                "Authorization": f"Bearer {access_token}"
            }
        )

        if res.status_code != 200 and retry > 0:
            time.sleep(2)
            return self.get_server_image_id(server_name, retry=retry - 1)

        if res.status_code != 200:
            logger.error(f"Failed to retrieve server details: {res.text}")
            raise Exception("Failed to retrieve server details")

        data = res.json()
        logger.debug(f"API Response: {data}")

        if "servers" not in data or len(data["servers"]) == 0:
            logger.error("No servers found in the response")
            raise Exception("No servers found")

        # Log all servers for debugging
        for i, server in enumerate(data["servers"]):
            logger.debug(f"Server {i}: {server}")

        # Filter servers by name (exact match)
        matching_servers = [server for server in data["servers"] if server["name"] == server_name]
        if not matching_servers:
            logger.error(f"No matching server found for name: {server_name}")
            raise Exception(f"No matching server found for name: {server_name}")

        server_data = matching_servers[0]
        logger.debug(f"Selected server data: {server_data}")

        # Check if the 'image' key exists in the selected server
        if "image" in server_data:
            image_id = server_data["image"]["id"]
            logger.debug(f"Retrieved image ID: {image_id}")
            return image_id
        else:
            logger.error(f"Image ID not found in server data: {server_data}")
            raise KeyError("image")

    except Exception as e:
        logger.error(f"Error in get_server_image_id: {e}")
        raise