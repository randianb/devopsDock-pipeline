- name: Write Vault Role ID to file
  become: true
  copy:
    content: |
      VAULT_ROLE: {{ VAULT_ROLE }}
      VAULT_SECRET: {{ VAULT_SECRET }}
      VAULT_URL: "{{ VAULT_URL }}"
      VAULT_NAMESPACE: "{{ VAULT_NAMESPACE }}"
    dest: /tmp/vault_info.txt
    mode: '0644'

- name: Read Vault configuration from file
  become: true
  slurp:
    src: /tmp/vault_info.txt
  register: vault_info_file

- name: Extract Vault Configuration (Role ID, Secret ID, URL, and Namespace)
  set_fact:
    vault_role_id: "{{ vault_info_file['content'] | b64decode | splitlines | select('match', 'VAULT_ROLE:') | first | split(': ')[1] }}"
    vault_secret_id: "{{ vault_info_file['content'] | b64decode | splitlines | select('match', 'VAULT_SECRET:') | first | split(': ')[1] }}"
    vault_url: "{{ vault_info_file['content'] | b64decode | splitlines | select('match', 'VAULT_URL:') | first | split(': ')[1] }}"
    vault_namespace: "{{ vault_info_file['content'] | b64decode | splitlines | select('match', 'VAULT_NAMESPACE:') | first | split(': ')[1] }}"

- name: Debug Vault Variables
  copy:
    content: "Vault URL: {{ vault_url }}\nVault Namespace: {{ vault_namespace }}"
    dest: /tmp/vault_url.txt
    mode: '0644'

- name: Retrieve client token
  become: true
  command: >
    curl --request POST --data '{"role_id": "{{ vault_role_id }}", "secret_id": "{{ vault_secret_id }}"}'
    {{ vault_url }}/v1/myVault/{{ vault_namespace }}/auth/approle/login
  register: vault_auth_response

- name: Extract Vault Token
  set_fact:
    vault_client_token: "{{ vault_auth_response.stdout | from_json | json_query('auth.client_token') }}"