 FAILED! => {"changed": true, "cmd": "/usr/pgadmin4/bin/setup-web.sh\n", "delta": "0:00:02.692211", "end": "2024-12-19 15:08:50.544464", "msg": "non-zero return code", "rc": 1, "start": "2024-12-19 15:08:47.852253", "stderr": "������������������������������������������������������������������ Traceback (most recent call last) ���������������������������������������������������������������������\n��� /usr/pgadmin4/web/setup.py:582 in setup_db                                   ���\n���                                                                              ���\n���   579 ���   ���   help=\"This argument doesn't require in CLI mode.\")] = None):   ���\n���   580 ���   \"\"\"Setup the configuration database.\"\"\"                            ���\n���   581 ���                                                                      ���\n��� ��� 582 ���   app = app or create_app()                                          ���\n���   583 ���   create_app_data_directory(config)                                  ���\n���   584 ���                                                                      ���\n���   585 ���   print(\"pgAdmin 4 - Application Initialisation\")                    ���\n���                                                                              ���\n��� /usr/pgadmin4/web/pgadmin/__init__.py:352 in create_app                      ���\n���                                                                              ���\n���   349 ���   app.config['SECURITY_PASSWORD_LENGTH_MIN'] = config.PASSWORD_LENGT ���\n���   350 ���                                                                      ���\n���   351 ���   # Create database connection object and mailer                     ���\n��� ��� 352 ���   db.init_app(app)                                                   ���\n���   353 ���   Migrate(app, db)                                                   ���\n���   354 ���                                                                      ���\n���   355 ���   ################################################################## ���\n���                                                                              ���\n��� /usr/pgadmin4/venv/lib64/python3.9/site-packages/flask_sqlalchemy/extension. ���\n��� py:374 in init_app                                                           ���\n���                                                                              ���\n���    371 ���   ���   ���   options.setdefault(\"echo\", echo)                          ���\n���    372 ���   ���   ���   options.setdefault(\"echo_pool\", echo)                     ���\n���    373 ���   ���   ���   self._apply_driver_defaults(options, app)                 ���\n��� ���  374 ���   ���   ���   engines[key] = self._make_engine(key, options, app)       ���\n���    375 ���   ���                                                                 ���\n���    376 ���   ���   if app.config.setdefault(\"SQLALCHEMY_RECORD_QUERIES\", False): ���\n���    377 ���   ���   ���   from . import record_queries                              ���\n���                                                                              ���\n��� /usr/pgadmin4/venv/lib64/python3.9/site-packages/flask_sqlalchemy/extension. ���\n��� py:665 in _make_engine                                                       ���\n���                                                                              ���\n���    662 ���   ���   .. versionchanged:: 3.0                                       ���\n���    663 ���   ���   ���   Renamed from ``create_engine``, this method is internal.  ���\n���    664 ���   ���   \"\"\"                                                           ���\n��� ���  665 ���   ���   return sa.engine_from_config(options, prefix=\"\")              ���\n���    666 ���                                                                     ���\n���    667 ���   @property                                                         ���\n���    668 ���   def metadata(self) -> sa.MetaData:                                ���\n���                                                                              ���\n��� /usr/pgadmin4/venv/lib64/python3.9/site-packages/sqlalchemy/engine/create.py ���\n��� :820 in engine_from_config                                                   ���\n���                                                                              ���\n���   817 ���   options[\"_coerce_config\"] = True                                   ���\n���   818 ���   options.update(kwargs)                                             ���\n���   819 ���   url = options.pop(\"url\")                                           ���\n��� ��� 820 ���   return create_engine(url, **options)                               ���\n���   821                                                                        ���\n���   822                                                                        ���\n���   823 @overload                                                              ���\n��� in create_engine:2                                                           ���\n���                                                                              ���\n��� /usr/pgadmin4/venv/lib64/python3.9/site-packages/sqlalchemy/util/deprecation ���\n��� s.py:281 in warned                                                           ���\n���                                                                              ���\n���   278 ���   ���   ���   ���   ���   ���   version_warnings[m],                           ���\n���   279 ���   ���   ���   ���   ���   ���   stacklevel=3,                                  ���\n���   280 ���   ���   ���   ���   ���   )                                                  ���\n��� ��� 281 ���   ���   ���   return fn(*args, **kwargs)  # type: ignore[no-any-return]  ���\n���   282 ���   ���                                                                  ���\n���   283 ���   ���   doc = fn.__doc__ is not None and fn.__doc__ or \"\"              ���\n���   284 ���   ���   if doc:                                                        ���\n���                                                                              ���\n��� /usr/pgadmin4/venv/lib64/python3.9/site-packages/sqlalchemy/engine/create.py ���\n��� :599 in create_engine                                                        ���\n���                                                                              ���\n���   596 ���   ���   for k in util.get_func_kwargs(dbapi_meth):                     ���\n���   597 ���   ���   ���   if k in kwargs:                                            ���\n���   598 ���   ���   ���   ���   dbapi_args[k] = pop_kwarg(k)                           ���\n��� ��� 599 ���   ���   dbapi = dbapi_meth(**dbapi_args)                               ���\n���   600 ���                                                                      ���\n���   601 ���   dialect_args[\"dbapi\"] = dbapi                                      ���\n���   602                                                                        ���\n���                                                                              ���\n��� /usr/pgadmin4/venv/lib64/python3.9/site-packages/sqlalchemy/dialects/postgre ���\n��� sql/psycopg2.py:690 in import_dbapi                                          ���\n���                                                                              ���\n���   687 ���                                                                      ���\n���   688 ���   @classmethod                                                       ���\n���   689 ���   def import_dbapi(cls):                                             ���\n��� ��� 690 ���   ���   import psycopg2                                                ���\n���   691 ���   ���                                                                  ���\n���   692 ���   ���   return psycopg2                                                ���\n���   693                                                                        ���\n������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������\nModuleNotFoundError: No module named 'psycopg2'", "stderr_lines": ["������������������������������������������������������������������ Traceback (most recent call last) ���������������������������������������������������������������������", "��� /usr/pgadmin4/web/setup.py:582 in setup_db                                   ���", "���                                                                              ���", "���   579 ���   ���   help=\"This argument doesn't require in CLI mode.\")] = None):   ���", "���   580 ���   \"\"\"Setup the configuration database.\"\"\"                            ���", "���   581 ���                                                                      ���", "��� ��� 582 ���   app = app or create_app()                                          ���", "���   583 ���   create_app_data_directory(config)                                  ���", "���   584 ���                                                                      ���", "���   585 ���   print(\"pgAdmin 4 - Application Initialisation\")                    ���", "���                                                                              ���", "��� /usr/pgadmin4/web/pgadmin/__init__.py:352 in create_app                      ���", "���                                                                              ���", "���   349 ���   app.config['SECURITY_PASSWORD_LENGTH_MIN'] = config.PASSWORD_LENGT ���", "���   350 ���                                                                      ���", "���   351 ���   # Create database connection object and mailer                     ���", "��� ��� 352 ���   db.init_app(app)                                                   ���", "���   353 ���   Migrate(app, db)                                                   ���", "���   354 ���                                                                      ���", "���   355 ���   ################################################################## ���", "���                                                                              ���", "��� /usr/pgadmin4/venv/lib64/python3.9/site-packages/flask_sqlalchemy/extension. ���", "��� py:374 in init_app                                                           ���", "���                                                                              ���", "���    371 ���   ���   ���   options.setdefault(\"echo\", echo)                          ���", "���    372 ���   ���   ���   options.setdefault(\"echo_pool\", echo)                     ���", "���    373 ���   ���   ���   self._apply_driver_defaults(options, app)                 ���", "��� ���  374 ���   ���   ���   engines[key] = self._make_engine(key, options, app)       ���", "���    375 ���   ���                                                                 ���", "���    376 ���   ���   if app.config.setdefault(\"SQLALCHEMY_RECORD_QUERIES\", False): ���", "���    377 ���   ���   ���   from . import record_queries                              ���", "���                                                                              ���", "��� /usr/pgadmin4/venv/lib64/python3.9/site-packages/flask_sqlalchemy/extension. ���", "��� py:665 in _make_engine                                                       ���", "���                                                                              ���", "���    662 ���   ���   .. versionchanged:: 3.0                                       ���", "���    663 ���   ���   ���   Renamed from ``create_engine``, this method is internal.  ���", "���    664 ���   ���   \"\"\"                                                           ���", "��� ���  665 ���   ���   return sa.engine_from_config(options, prefix=\"\")              ���", "���    666 ���                                                                     ���", "���    667 ���   @property                                                         ���", "���    668 ���   def metadata(self) -> sa.MetaData:                                ���", "���                                                                              ���", "��� /usr/pgadmin4/venv/lib64/python3.9/site-packages/sqlalchemy/engine/create.py ���", "��� :820 in engine_from_config                                                   ���", "���                                                                              ���", "���   817 ���   options[\"_coerce_config\"] = True                                   ���", "���   818 ���   options.update(kwargs)                                             ���", "���   819 ���   url = options.pop(\"url\")                                           ���", "��� ��� 820 ���   return create_engine(url, **options)                               ���", "���   821                                                                        ���", "���   822                                                                        ���", "���   823 @overload                                                              ���", "��� in create_engine:2                                                           ���", "���                                                                              ���", "��� /usr/pgadmin4/venv/lib64/python3.9/site-packages/sqlalchemy/util/deprecation ���", "��� s.py:281 in warned                                                           ���", "���                                                                              ���", "���   278 ���   ���   ���   ���   ���   ���   version_warnings[m],                           ���", "���   279 ���   ���   ���   ���   ���   ���   stacklevel=3,                                  ���", "���   280 ���   ���   ���   ���   ���   )                                                  ���", "��� ��� 281 ���   ���   ���   return fn(*args, **kwargs)  # type: ignore[no-any-return]  ���", "���   282 ���   ���                                                                  ���", "���   283 ���   ���   doc = fn.__doc__ is not None and fn.__doc__ or \"\"              ���", "���   284 ���   ���   if doc:                                                        ���", "���                                                                              ���", "��� /usr/pgadmin4/venv/lib64/python3.9/site-packages/sqlalchemy/engine/create.py ���", "��� :599 in create_engine                                                        ���", "���                                                                              ���", "���   596 ���   ���   for k in util.get_func_kwargs(dbapi_meth):                     ���", "���   597 ���   ���   ���   if k in kwargs:                                            ���", "���   598 ���   ���   ���   ���   dbapi_args[k] = pop_kwarg(k)                           ���", "��� ��� 599 ���   ���   dbapi = dbapi_meth(**dbapi_args)                               ���", "���   600 ���                                                                      ���", "���   601 ���   dialect_args[\"dbapi\"] = dbapi                                      ���", "���   602                                                                        ���", "���                                                                              ���", "��� /usr/pgadmin4/venv/lib64/python3.9/site-packages/sqlalchemy/dialects/postgre ���", "��� sql/psycopg2.py:690 in import_dbapi                                          ���", "���                                                                              ���", "���   687 ���                                                                      ���", "���   688 ���   @classmethod                                                       ���", "���   689 ���   def import_dbapi(cls):                                             ���", "��� ��� 690 ���   ���   import psycopg2                                                ���", "���   691 ���   ���                                                                  ���", "���   692 ���   ���   return psycopg2                                                ���", "���   693                                                                        ���", "������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������", "ModuleNotFoundError: No module named 'psycopg2'"], "stdout": "Setting up pgAdmin 4 in web mode on a Redhat based platform...\nCreating configuration database...\nError setting up server mode. Please examine the output above.", "stdout_lines": ["Setting up pgAdmin 4 in web mode on a Redhat based platform...", "Creating configuration database...", "Error setting up server mode. Please examine the output above."]}
...ignoring
