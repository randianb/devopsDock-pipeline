import sys
import os
from common import logger, sgcloud
from contextlib import redirect_stdout

SCRIPT_DIR = os.path.dirname(os.path.abspath(__file__))  # Get the script's directory
NOTIFY_SCRIPT = os.path.join(SCRIPT_DIR, "../scripts/notify_mismatch.sh")  # Resolve the shell script path

def get_ocs_image_ids(server_name, region):
    sg_cloud_client = sgcloud.Client(os.environ['ACCOUNT_ID'], os.environ['CLIENT_ID'], os.environ['CLIENT_SECRET'])
    
    with open(os.devnull, 'w') as devnull:
        with redirect_stdout(devnull):        
            image_ids = sg_cloud_client.get_server_image_ids(server_name, region)
    
    if not image_ids:
        print("No image IDs retrieved.", file=sys.stderr)
        return
    
    unique_images = set(image_ids)

    # If servers have different images, trigger a notification
    if len(unique_images) > 1:
        logger.warning(f"Mismatch in server images detected for {server_name}! Sending notification...")
        os.system(f"sh {NOTIFY_SCRIPT} {server_name}")  # Pass server_name as an argument

    # Proceed with the process using the first image ID
    first_image_id = image_ids[0]
    image_name = sg_cloud_client.get_image_details(first_image_id, region)
    print(image_name)

def main():
    server_name = sys.argv[1]
    region = sys.argv[2]
    get_ocs_image_ids(server_name, region)

if __name__ == "__main__":
    main()