def jenkinsUrl = "https://cdp-jenkins-paas-xsf.fr.world.socgen"

pipeline {
    agent any

    stages {
        stage('Get Last Success Build') {
            steps {
                withCredentials([
                    string(credentialsId: 'jenkins-user', variable: 'JENKINS_USER'),
                    string(credentialsId: 'jenkins-token', variable: 'JENKINS_TOKEN')
                ]) {
                    script {
                        // Get the last successful build number
                        def buildNumber = sh(script: """
                            curl -s --user "$JENKINS_USER:$JENKINS_TOKEN" \
                            "${jenkinsUrl}/job/DJD/job/CD-Deploy/job/openr-pipeline-int/lastSuccessfulBuild/buildNumber"
                        """, returnStdout: true).trim()

                        echo "Latest Successful Build Number: ${buildNumber}"

                        // Get Jenkins crumb token
                        def crumbResponse = sh(script: """
                            curl -s --user "$JENKINS_USER:$JENKINS_TOKEN" \
                            "${jenkinsUrl}/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,\":\",//crumb)"
                        """, returnStdout: true).trim()

                        def crumbField = crumbResponse.split(":")[0]
                        def crumbValue = crumbResponse.split(":")[1]

                        echo "Crumb Retrieved: ${crumbField} = ${crumbValue}"

                        // Trigger the replay
                        def replayResponse = sh(script: """
                            curl -s -X POST --user "$JENKINS_USER:$JENKINS_TOKEN" \
                            -H "$crumbField: $crumbValue" \
                            "${jenkinsUrl}/job/DJD/job/CD-Deploy/job/openr-pipeline-int/${buildNumber}/replay/run"
                        """, returnStdout: true).trim()

                        echo "Replay Response: ${replayResponse}"
                    }
                }
            }
        }
    }
}